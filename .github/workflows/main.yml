name: Build and Deploy Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set permissions
      run: chmod 777 ./gesto-rest/storage -R && chmod 777 ./gesto-rest/bootstrap -R

    - name: Set up env file
      run: |
        echo "APP_NAME=gesto-rest" > ./gesto-rest/.env
        echo "APP_ENV=production" >> ./gesto-rest/.env
        echo "APP_KEY=${{ secrets.APP_KEY }}" >> ./gesto-rest/.env
        echo "DB_HOST=gesto-rest-mysql-container" >> ./gesto-rest/.env
        echo "DB_DATABASE=restaurante" >> ./gesto-rest/.env
        echo "DB_USERNAME=root" >> ./gesto-rest/.env
        echo "DB_PASSWORD=1q2w3e4r" >> ./gesto-rest/.env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Laravel PHP-FPM
      uses: docker/build-push-action@v6
      with:
        context: .
        file: AppDockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-image:latest

    - name: Build and push Nginx
      uses: docker/build-push-action@v6
      with:
        context: .
        file: NginxDockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTING_PC }}
        username: ${{ secrets.HOSTING_USERNAME }}
        key: ${{ secrets.HOSTING_KEY }}
        script: |
          cd /home/restaurante/gestor-reservas-restaurante/gesto-rest
          docker-compose down;
          docker-compose pull;
          docker-compose up -d;